{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive - Kenbright\\\\Desktop\\\\React INDIE project 3\\\\indie-project\\\\src\\\\events\\\\events.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport './events.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AttendEvent = () => {\n  _s();\n  const [emblaRef, emblaApi] = useEmblaCarousel({\n    loop: false\n  });\n  useEffect(() => {\n    if (emblaApi) {\n      // Automatically initialize to the first slide or any specific slide\n      emblaApi.scrollTo(0);\n    }\n  }, [emblaApi]);\n  const handlePrev = () => {\n    if (emblaApi) {\n      emblaApi.scrollPrev();\n    }\n  };\n  const handleNext = () => {\n    if (emblaApi) {\n      emblaApi.scrollNext();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"embla\",\n        ref: emblaRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"embla__viewport\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"embla__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"embla__slide\",\n              style: {\n                backgroundColor: 'red'\n              },\n              children: \"Slide 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"embla__slide\",\n              style: {\n                backgroundColor: 'blue'\n              },\n              children: \"Slide 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"embla__slide\",\n              style: {\n                backgroundColor: 'green'\n              },\n              children: \"Slide 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"embla-button-prev\",\n        onClick: handlePrev,\n        disabled: !emblaApi || !emblaApi.canScrollPrev(),\n        children: \"\\u276E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"embla-button-next\",\n        onClick: handleNext,\n        disabled: !emblaApi || !emblaApi.canScrollNext(),\n        children: \"\\u276F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n_s(AttendEvent, \"iEOhEYXOe+NO/lSPD421b+vbvvE=\", false, function () {\n  return [useEmblaCarousel];\n});\n_c = AttendEvent;\nexport default AttendEvent;\nvar _c;\n$RefreshReg$(_c, \"AttendEvent\");","map":{"version":3,"names":["React","useEffect","useEmblaCarousel","jsxDEV","_jsxDEV","Fragment","_Fragment","AttendEvent","_s","emblaRef","emblaApi","loop","scrollTo","handlePrev","scrollPrev","handleNext","scrollNext","children","className","ref","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","canScrollPrev","canScrollNext","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive - Kenbright/Desktop/React INDIE project 3/indie-project/src/events/events.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport useEmblaCarousel from 'embla-carousel-react';\r\nimport './events.css';\r\n\r\nconst AttendEvent = () => {\r\n\r\n    \r\n   \r\n\r\n    const [emblaRef, emblaApi] = useEmblaCarousel({ loop: false })\r\n\r\n\r\n          useEffect(() => {\r\n            if (emblaApi) {\r\n                // Automatically initialize to the first slide or any specific slide\r\n                emblaApi.scrollTo(0)\r\n            }\r\n        }, [emblaApi])\r\n    \r\n        const handlePrev = () => {\r\n          \r\n            if (emblaApi) {\r\n                emblaApi.scrollPrev();\r\n            }\r\n        };\r\n        const handleNext = () => {\r\n          \r\n            if (emblaApi) {\r\n                emblaApi.scrollNext();\r\n            }\r\n        };\r\n\r\n\r\n    return (\r\n        <>\r\n         <div>\r\n      <div className=\"embla\" ref={emblaRef}>\r\n        <div className=\"embla__viewport\">\r\n          <div className=\"embla__container\">\r\n            <div className=\"embla__slide\" style={{ backgroundColor: 'red' }}>Slide 1</div>\r\n            <div className=\"embla__slide\" style={{ backgroundColor: 'blue' }}>Slide 2</div>\r\n            <div className=\"embla__slide\" style={{ backgroundColor: 'green' }}>Slide 3</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Attach the functions to the buttons */}\r\n      <button\r\n        className=\"embla-button-prev\"\r\n        onClick={handlePrev}\r\n        disabled={!emblaApi || !emblaApi.canScrollPrev()}\r\n      >\r\n        ❮\r\n      </button>\r\n      <button\r\n        className=\"embla-button-next\"\r\n        onClick={handleNext}\r\n        disabled={!emblaApi || !emblaApi.canScrollNext()}\r\n      >\r\n        ❯\r\n      </button>\r\n    </div>\r\n        </>\r\n    );\r\n}\r\nexport default AttendEvent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}